---
import Calendar_icon from '../assets/icons/calendar_icon.svg'
import Dark_icon from '../assets/icons/dark_icon.svg'
import User_icon from '../assets/icons/user_icon.svg'
import Light_icon from '../assets/icons/light_icon.svg'
import Densora_logo from '../assets/icons/densora_logo.svg'
import Find_icon from '../assets/icons/find_icon.svg'
import Menu_icon from '../assets/icons/menu_icon.svg'
import Star_icon from '../assets/icons/star_icon.svg'
import Oval from '../assets/shapes/oval.svg'
import Equis from '../assets/icons/x_icon.svg'
import Button from "./button.astro"
---

<header class="relative h-24">
    <div class="absolute top-0 left-0 w-full h-20 overflow-hidden -z-10">
        <svg width="100%" height="200" viewBox="0 0 1440 400" xmlns="http://www.w3.org/2000/svg"
             class="absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-[60%]">
            <path d="M200,100
                     H1240
                     Q1340,100 1340,200
                     V300
                     Q1340,400 1240,400
                     H200
                     Q100,400 100,300
                     V200
                     Q100,100 200,100Z"
                  class="fill-primary dark:fill-secondary"/>
        </svg>
        <!--<Oval class="w-full h-20 fill-amber-300"/>-->
    </div>

    <div class="flex gap-10 items-center justify-center h-15 relative z-10">
        <Star_icon class='transform translate-y-1.5' width='28' height='28'/>

        <a href="/options">
        <Menu_icon class="transform translate-y-2.5" width='28' height='28' />
        </a>

        <button id="toggle-search" class="transform translate-y-3.5">
        <Find_icon width="28" height="28" />
        </button>

        <a href="/">
        <Densora_logo class="transform translate-y-4" width='28' height='28' />
        </a>

        <a href="profile">
        <User_icon class="transform translate-y-3.5" width='28' height='28' />
        </a>

        <a href="calendar">
        <Calendar_icon class="transform translate-y-2.5" width='28' height='28' />
        </a>

        <Light_icon id="theme-icon" class='transform translate-y-1.5 hidden dark:block' width='28' height='28' />
        <Dark_icon id="theme-icon" class="transform translate-y-1.5 block dark:hidden" width='28' height='28' />
   

        
    </div>
    <!-- ðŸ”Ž Barra de bÃºsqueda oculta al inicio -->
    <div id="search-bar" class="hidden w-full flex justify-center mt-4 relative z-10">
    <div class="relative w-2/3 max-w-md">
        <input
        id="search-input"
        type="text"
        placeholder="Buscar..."
        class="w-full px-4 py-2 pr-10 rounded-full border text-primaryText-light border-primaryBackground-light shadow focus:outline-none focus:ring-1 focus:ring-primaryBackground-light dark:text-primaryText-dark dark:bg-gray-800"
        />
        <button
        id="clear-search"
        class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-red-500"
        >
        <Equis class="w-4 h-4" />
        </button>
    </div>
    </div>

                <script>
  document.addEventListener('DOMContentLoaded', () => {
  
    const themeIcons = document.querySelectorAll('#theme-icon')
    const html = document.documentElement

    themeIcons.forEach(icon => {
      icon.addEventListener('click', () => {
        const currentTheme = html.getAttribute('data-theme')
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark'
        html.setAttribute('data-theme', newTheme)
        localStorage.setItem('theme', newTheme)
      })
    })

   
    const searchButton = document.getElementById('toggle-search')
    const searchBar = document.getElementById('search-bar')
    const iconBar = document.getElementById('icon-bar')
    const searchInput = document.getElementById('search-input')
    const clearSearch = document.getElementById('clear-search')

  
    searchButton.addEventListener('click', (e) => {
      e.stopPropagation()
      searchBar.classList.remove('hidden')
      iconBar.classList.add('hidden')
      searchInput.focus()
    })

   
    clearSearch.addEventListener('click', (e) => {
      e.stopPropagation()
      searchInput.value = ''
      searchBar.classList.add('hidden')
      iconBar.classList.remove('hidden')
    })


    document.addEventListener('click', (e) => {
      const isInsideSearch = searchBar.contains(e.target) || searchButton.contains(e.target)
      if (!isInsideSearch && !searchBar.classList.contains('hidden')) {
        searchInput.value = ''
        searchBar.classList.add('hidden')
        iconBar.classList.remove('hidden')
      }
    })

    searchInput.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') {
    const query = searchInput.value.trim()
    if (query !== '') {
    
      window.location.href = `/navMap?q=${encodeURIComponent(query)}`
    }
  }
})


  })
</script>

</header> 